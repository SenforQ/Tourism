name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/meeya.ipa"
          APPLE_ID: "guozhijun@cumulustech.shop"
          APP_SPECIFIC_PASSWORD: "kniy-hkyv-dxma-bbcp"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
